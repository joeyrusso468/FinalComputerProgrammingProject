#Creating a Game to recreate the retro game for snake for Final Project
#Coded by Joey Russo and Keith Locklear

import pygame
import time
import random

pygame.init()

#Set up our windows
display_width = 800
display_height = 600

#displaycolors, to make fancy colors go to website using rgb on color wheel to get the numbers
black = (0,0,0)
white = (255,255,255)
red = (200,0,0)
green = (0,200,0)

bright_red = (255,0,0)
bright_green = (0,255,0)
block_color = (53,115,255)

snake_width = 30

                            #able to call dimensions in further code written this way
gameDisplay = pygame.display.set_mode((display_width,display_height))

pygame.display.set_caption('Snake')
#define games clock
clock = pygame.time.Clock()

snakeImg = pygame.image.load('Image1.png')

def things_dodged(count):
    font = pygame.font.SysFont(None, 25)
    text = font.render("Dodged: "+str(count), True, black)
    gameDisplay.blit(text, (0,0))




def things(thingx, thingy, thingw, thingh, color):
    pygame.draw.rect(gameDisplay, block_color, [thingx, thingy, thingw, thingh])

def snake(x,y):
    gameDisplay.blit(snakeImg,(x,y))

def text_objects(text, font):
    textSurface = font.render(text, True, black)
    return textSurface, textSurface.get_rect()

def message_display(text):
    largeText = pygame.font.Font('freesansbold.ttf',115)
    TextSurf, TextRect = text_objects(text, largeText)
    TextRect.center = (display_width/2),(display_height/2)
    gameDisplay.blit(TextSurf, TextRect)

    pygame.display.update()

    time.sleep(2)

    game_loop()
    
def crash():
    message_display('You Crashed')

def button(msg,x,y,w,h,ic,ac,action=None):
    mouse = pygame.mouse.get_pos()
    click = pygame.mouse.get_pressed()
    #print(click)
    
    if x+w > mouse[0] > x and y+h > mouse[1] > y:
        pygame.draw.rect(gameDisplay, ac,(x,y,w,h))
        if click[0] == 1 and action != None:
            action()
    else:
        pygame.draw.rect(gameDisplay, ic,(x,y,w,h))
    smallText = pygame.font.Font("freesansbold.ttf",20)
    textSurf, textRect = text_objects(msg, smallText)
    textRect.center = ( (x+(w/2))), ( (y+(50/2)) )
    gameDisplay.blit(textSurf, textRect)
        
def quitgame():
    pygame.quit()
    quit()  

def game_intro():
    
    intro = True

    while intro:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()
                
        gameDisplay.fill(white)
        largeText = pygame.font.Font('freesansbold.ttf',115)
        TextSurf, TextRect = text_objects("Snake", largeText)
        TextRect.center = (display_width/2),(display_height/2)
        gameDisplay.blit(TextSurf, TextRect)

        button("GO!",150,450,100,50,green,bright_green,game_loop)
        button("Quit",550,450,100,50,red,bright_red,quitgame)       






        
        pygame.display.update()
        clock.tick(15)
        

def game_loop():

    x = (display_width * 0.5)
    y = (display_height * 0.7)

    x_change = 0

    thing_startx = random.randrange(0, display_width)
    thing_starty = -600
    thing_speed = 4
    thing_width = 100
    thing_height = 100


    dodged = 0

    #Loop and Breakout
    gameExit = False

    while not gameExit:

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()
                
            if event.type == pygame.KEYDOWN:    
                if event.key == pygame.K_LEFT:
                    x_change = -5
                elif event.key == pygame.K_RIGHT:
                    x_change = 5

            if event.type ==pygame.KEYUP:
                if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:
                    #print('hello')
                    x_change = 0      

        x += x_change
                    
        gameDisplay.fill(white)

    
    
        #(thingx, thingy, thingw, thingh, color)    
        things(thing_startx, thing_starty, thing_width, thing_height, block_color)
        thing_starty += thing_speed
        snake(x,y)
        things_dodged(dodged)
        
        '''if (x > display_width or x < 0) or (y > display_height or y < 0):
            gameExit = True
            print("width: " + str(display_width) + "height: " + str(display_height))'''

        if x > display_width - snake_width or x < 0:
            crash()

        if thing_starty > display_height:
            thing_starty = 0 - thing_height
            thing_startx = random.randrange(0,display_width)
            dodged += 1
            thing_speed += 1
            thing_width += (dodged * 1.2)
            

        
        if y < thing_starty+thing_height:
            #print('y crossover')

            if x > thing_startx and x < thing_startx + thing_width or x+snake_width > thing_startx and x + snake_width < thing_startx+thing_width:
                #print('x crossover')
                crash()

                   
        #Update Screen, can use flip or update, flip updates everything 
        pygame.display.update()
        #frames per second in parameter
        clock.tick(60)

















game_intro()
game_loop()
pygame.quit()
quit()
